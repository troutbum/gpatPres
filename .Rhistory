pwd
wd
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
getwd()
data<-hw1_data
dim(data)
good_data<- complete.cases(data)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
View(hw1_data)
data<-hw1_data
View(data)
good <- complete.cases(data)
good
good_data<-data[good,][,]
View(good_data)
data_above31 <- good_data[,"Ozone" > 31][,]
View(data_above31)
data_above31 <- good_data["Ozone" > 31]
data_above31 <- good_data("Ozone" > 31)
data_above31 <- good_data[,"Ozone" > 31]
data_above31
data_above31 <- good_data[:,"Ozone" > 31]
data_above31 <- good_data[good_data$Ozone > 31]
data_above31 <- good_data[Ozone > 31]
data_above31 <- good_data[$Ozone > 31]
data_above31 <- subset(good_data, "Ozone" > 31]
data_above31 <- subset(good_data, "Ozone" > 31)
View(data_above31)
data_above31 <- subset(good_data, [,"Ozone" > 31])
data_above31 <- good_data[which("Ozone" > 31,])
data_above31 <- good_data[which("Ozone" > 31,]
data_above31 <- good_data[which("Ozone" > 31),]
data_above31 <- good_data[which("Ozone" > 31)]
data_above31 <- good_data[which(,"Ozone" > 31)]
data_above31 <- good_data[which(:,"Ozone" > 31)]
names(good_data)
data.above31 <- subset(good_data, Ozone > 31)
View(data.above31)
foo <- complete.cases(data)
good <- complete.cases(data) #logical vector to weed out NAs
# R Programming - April 2014
# Week 1 Quiz
# code for Question 18
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
View(complete.data)
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
View(complete.data)
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
View(ozone.above31.data)
temp.above90.data <- subset(ozone.above31.data, Temp > 90)
View(temp.above90.data)
View(temp.above90.data)
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
View(`o31andt90.data`)
View(temp.above90.data)
View(`o31andt90.data`)
mean(o31andt90.data[Solar.R])
mean(o31andt90.data(:,Solar.R))
mean(o31andt90.data[:,Solar.R])
mean(o31andt90.data[:,"Solar.R]")
mean(o31andt90.data("Solar.R))
mean(o31andt90.data("Solar.R"))
colMeans(o31andt90.data[:,"Solar.R"])
mean(o31andt90.data[:,Solar.R])
mean(o31andt90.data[:,3])
colMeans(o31andt90.data[:,3])
colMeans(o31andt90.data[:,3])
solar.data <- o31andt90.data[:,3]
solar.data <- o31andt90.data(:,3)
solar.data <- o31andt90.data(,3)
o31andt90
o31andt90.data
o31andt90.data(,3)
o31andt90.data(:,3)
o31andt90.data[:,3]
class(031andt90.data)
class(o31andt90.data)
subdata <- o31andt90.data
class(subdata)
mean(subdata)
xdata <- data.matrix(o31andt90.data)
View(xdata)
View(xdata)
mean(xdata)
mean(xdata(,3))
mean(xdata[,3])
mean(xdata[:,3])
xdata
mean(xdata,"Solar.R")
mean(xdata,Solar.R)
View(`o31andt90.data`)
solar<-xdata(,3)
solar<-xdata[,3]
solar<-xdata[,2]
mean(solar)
foo<-xdata[,"Solar.R"]
mean(foo)
y.df <- subset(complete.data, Month == 6)
View(y.df)
View(complete.data)
y <- data.matrix(y.df) #convert to matrix
temp <-y[,"Temp"]
mean_temp <- mean(temp)
mean_temp
y.df <- subset(data, Month == 6)
View(y.df)
y <- data.matrix(y.df) #convert to matrix
temp <-y[,"Temp"]
mean(temp)
View(data)
View(complete.data)
z.df <- subset(complete.data, Month ==5)
z <- data.matrix(z.df) #convert to matrix
ozone <-z[,"Ozone"]
max(ozone)
View(z.df)
View(z.df)
z2.df <- subset(data, Month ==5)
z2 <- data.matrix(z2.df) #convert to matrix
ozone2 <-z2[,"Ozone"]
max(ozone2)
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<-xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <-y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <-z[,"Ozone"]
max(ozone)
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
t.df <- subset(data, Month == 6)
t1 <- t.df[,"Temp"]
mean(t1)
mean(t.df)
mean(t.df[,"Temp"])
mean(subset(data, Month == 6))
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(data, Month == 5)[,"Ozone"])
max(subset(complete.data, Month == 5)[,"Ozone"])
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
# R Programming - April 2014
# Week 1 Quiz
# Question 18:  Extract the subset of rows of the data frame
# where Ozone values are above 31 and Temp values are above 90.
# What is the mean of Solar.R in this subset?
hw1_data <- read.csv("~/Downloads/hw1_data.csv")
getwd()
data<-hw1_data
dim(data)  #dimensions of input data
good <- complete.cases(data) #logical vector to weed out NAs
complete.data<-data[good,][,]  #complete data only
names(complete.data) #check names in data frame
ozone.above31.data <- subset(complete.data, Ozone > 31) #subset of data
temp.above90.data <- subset(ozone.above31.data, Temp > 90)  #subset of data
o31andt90.data <- subset(complete.data, Ozone > 31 & Temp > 90) #test both conditions at once
xdata <- data.matrix(o31andt90.data)  # convert to matrix?  need to do this to find mean?
solar<- xdata[,"Solar.R"]
mean(solar)
# Question 19:  Mean Temp when Month = 6
y.df <- subset(data, Month == 6)  #use all the data not the cleaned set
y <- data.matrix(y.df) #convert to matrix
temp <- y[,"Temp"]
mean(temp)
# Question 20: What was the maximum ozone value in the month of May (i.e. Month = 5)?
z.df <- subset(complete.data, Month ==5) #must used "cleaned" data otherwise max() returns NA
z <- data.matrix(z.df) #convert to matrix
ozone <- z[,"Ozone"]
max(ozone)
# Compressed code for Questions 18-20
# (matches previous results)
mean(subset(data, Month == 6)[,"Temp"])
mean(subset(data, Ozone > 31 & Temp > 90)[,"Solar.R"])
max(subset(complete.data, Month == 5)[,"Ozone"])  # need NA removed dataset for max()
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
install.packages("swirl")  # Installs swirl
library(swirl)  # Loads swirl
swirl()  # Runs swirl
library(datasets)
data(iris)
?iris
myi <- iris
View(iris)
MPG <- read.csv("~/Downloads/MPG.csv")
View(MPG)
ColMean?
?ColMean
?ColMeans
ColMeans?
ColSums(MPG,Cost)
mean(MPG,"MPG")
x <-MPG
ColSums(X)
ColSums(x)
colMeans(x)
colMeans(x,7)
tail(x)
nrow(x)
mean(x,[,"MPG"])
mean(x[,"MPG"])
mileage <- MPG[,"MPG"]
mean(mileage)
View(x)
?ColMeans
colMeans(x,na.rm = TRUE)
mean?
?mean
mean(mileage, na.rm=TRUE)
cost<-x[,"Cost"]
sum(cost)
PriusMPG <- read.csv("~/Downloads/PriusMPG.csv")
View(PriusMPG)
priusMileage<-PriusMPG[,"MPG"]
mean(priusMileage, na.rm=TRUE)
?split
pCost <- PriusMPG[,"Cost"]
sum(pCost)
sum(pCost, na.rm=TRUE)
?days
92464/6
(92464/6)/12
View(x)
?dates
?date
5757/6
mean(x[,7])
mean(x[,7],na.rm=TRUE)
sum(x[,4])
class(x[,1])
y<-strptime(x[1,1])
y<-as.date(x[1,1])
y<-as.Date(x[1,1])
?strp
?str
summary(x)
str(x)
x[,1]>="12/31/2013"
as.Date(x[,1])>="12/31/2013"
x[1,1]
str(date)
str(as.Date)
summary(PriusMPG)
summary(x)
factor
?factor
colMeans(x[,7])
str(colMeans)
?colMeans
class(x[,7])
x[,7]
colMeans(x[,7],na.rm=TRUE)
x
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
install.packages("~/Downloads/xlsx_0.5.5.tgz", repos = NULL)
library(xlsx)
R.Version()
R.Version()
install.packages("xlsx")
library(xlsx)
rowIndex <- 18:23
colIndex <- 7:15
dat <- read.xlsx("./data/NGAP.xlsx,sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex")
install.packages("devtools")
?library
library(R.utils, quietly = TRUE)       #for bzunzip
```{r echo = FALSE}
library(R.utils, quietly = TRUE)       #for bzunzip
library(R.utils)       #for bzunzip
install.packages("R.u")
install.packages("R.utils")
install.packages("R.utils")
install.packages("R.utils")
install.packages("R.utils")
install.packages("R.utils")
install.packages("R.utils")
install.packages("R.utils")
install.packages("jsonlite")
install.packages("R.utils")
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
shiny::runApp('GitHub/gpat')
setwd("~/GitHub/gpatPres")
date
?date
x=format(date(), format="%A %B %d, %Y")
format(date(), format="%A %B %d, %Y")
date()
